# coding: utf-8

"""
    authentik

    Making authentication simple.

    The version of the OpenAPI document: 2025.10.0-rc1
    Contact: hello@goauthentik.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from authentik_openapi.models.paginated_initial_permissions_list import PaginatedInitialPermissionsList

class TestPaginatedInitialPermissionsList(unittest.TestCase):
    """PaginatedInitialPermissionsList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaginatedInitialPermissionsList:
        """Test PaginatedInitialPermissionsList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaginatedInitialPermissionsList`
        """
        model = PaginatedInitialPermissionsList()
        if include_optional:
            return PaginatedInitialPermissionsList(
                pagination = authentik_openapi.models.pagination.Pagination(
                    next = 1.337, 
                    previous = 1.337, 
                    count = 1.337, 
                    current = 1.337, 
                    total_pages = 1.337, 
                    start_index = 1.337, 
                    end_index = 1.337, ),
                results = [
                    authentik_openapi.models.initial_permissions.InitialPermissions(
                        pk = 56, 
                        name = '', 
                        mode = 'user', 
                        role = '', 
                        permissions = [
                            56
                            ], 
                        permissions_obj = [
                            authentik_openapi.models.permission.Permission(
                                id = 56, 
                                name = '', 
                                codename = '', 
                                model = '', 
                                app_label = '', 
                                app_label_verbose = '', 
                                model_verbose = '', )
                            ], )
                    ],
                autocomplete = {
                    'key' : null
                    }
            )
        else:
            return PaginatedInitialPermissionsList(
                pagination = authentik_openapi.models.pagination.Pagination(
                    next = 1.337, 
                    previous = 1.337, 
                    count = 1.337, 
                    current = 1.337, 
                    total_pages = 1.337, 
                    start_index = 1.337, 
                    end_index = 1.337, ),
                results = [
                    authentik_openapi.models.initial_permissions.InitialPermissions(
                        pk = 56, 
                        name = '', 
                        mode = 'user', 
                        role = '', 
                        permissions = [
                            56
                            ], 
                        permissions_obj = [
                            authentik_openapi.models.permission.Permission(
                                id = 56, 
                                name = '', 
                                codename = '', 
                                model = '', 
                                app_label = '', 
                                app_label_verbose = '', 
                                model_verbose = '', )
                            ], )
                    ],
                autocomplete = {
                    'key' : null
                    },
        )
        """

    def testPaginatedInitialPermissionsList(self):
        """Test PaginatedInitialPermissionsList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
