# coding: utf-8

"""
    authentik

    Making authentication simple.

    The version of the OpenAPI document: 2025.10.0-rc1
    Contact: hello@goauthentik.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from authentik_openapi.models.ssf_stream import SSFStream

class TestSSFStream(unittest.TestCase):
    """SSFStream unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SSFStream:
        """Test SSFStream
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SSFStream`
        """
        model = SSFStream()
        if include_optional:
            return SSFStream(
                pk = '',
                provider = 56,
                provider_obj = authentik_openapi.models.ssf_provider.SSFProvider(
                    pk = 56, 
                    name = '', 
                    component = '', 
                    verbose_name = '', 
                    verbose_name_plural = '', 
                    meta_model_name = '', 
                    signing_key = '', 
                    token_obj = null, 
                    oidc_auth_providers = [
                        56
                        ], 
                    ssf_url = '', 
                    event_retention = '', ),
                delivery_method = 'https://schemas.openid.net/secevent/risc/delivery-method/push',
                endpoint_url = '',
                events_requested = [
                    'https://schemas.openid.net/secevent/caep/event-type/session-revoked'
                    ],
                format = '',
                aud = [
                    ''
                    ],
                iss = ''
            )
        else:
            return SSFStream(
                pk = '',
                provider = 56,
                provider_obj = authentik_openapi.models.ssf_provider.SSFProvider(
                    pk = 56, 
                    name = '', 
                    component = '', 
                    verbose_name = '', 
                    verbose_name_plural = '', 
                    meta_model_name = '', 
                    signing_key = '', 
                    token_obj = null, 
                    oidc_auth_providers = [
                        56
                        ], 
                    ssf_url = '', 
                    event_retention = '', ),
                delivery_method = 'https://schemas.openid.net/secevent/risc/delivery-method/push',
                format = '',
                iss = '',
        )
        """

    def testSSFStream(self):
        """Test SSFStream"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
