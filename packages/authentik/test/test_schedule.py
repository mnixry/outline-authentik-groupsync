# coding: utf-8

"""
    authentik

    Making authentication simple.

    The version of the OpenAPI document: 2025.10.0-rc1
    Contact: hello@goauthentik.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from authentik_openapi.models.schedule import Schedule

class TestSchedule(unittest.TestCase):
    """Schedule unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Schedule:
        """Test Schedule
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Schedule`
        """
        model = Schedule()
        if include_optional:
            return Schedule(
                id = '',
                identifier = '',
                uid = '',
                actor_name = '',
                rel_obj_app_label = '',
                rel_obj_model = '',
                rel_obj_id = '',
                crontab = '',
                paused = True,
                next_run = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                description = '',
                last_task_status = 'queued'
            )
        else:
            return Schedule(
                id = '',
                identifier = '',
                uid = '',
                actor_name = '',
                rel_obj_app_label = '',
                rel_obj_model = '',
                crontab = '',
                next_run = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                description = '',
                last_task_status = 'queued',
        )
        """

    def testSchedule(self):
        """Test Schedule"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
