# coding: utf-8

"""
    authentik

    Making authentication simple.

    The version of the OpenAPI document: 2025.10.0-rc1
    Contact: hello@goauthentik.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from authentik_openapi.models.task import Task

class TestTask(unittest.TestCase):
    """Task unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Task:
        """Test Task
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Task`
        """
        model = Task()
        if include_optional:
            return Task(
                message_id = '',
                queue_name = '',
                actor_name = '',
                state = 'queued',
                mtime = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                rel_obj_app_label = '',
                rel_obj_model = '',
                rel_obj_id = '',
                uid = '',
                messages = [
                    authentik_openapi.models.log_event.LogEvent(
                        timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        log_level = 'critical', 
                        logger = '', 
                        event = '', 
                        attributes = {
                            'key' : null
                            }, )
                    ],
                previous_messages = [
                    authentik_openapi.models.log_event.LogEvent(
                        timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        log_level = 'critical', 
                        logger = '', 
                        event = '', 
                        attributes = {
                            'key' : null
                            }, )
                    ],
                aggregated_status = 'queued',
                description = ''
            )
        else:
            return Task(
                actor_name = '',
                rel_obj_app_label = '',
                rel_obj_model = '',
                uid = '',
                messages = [
                    authentik_openapi.models.log_event.LogEvent(
                        timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        log_level = 'critical', 
                        logger = '', 
                        event = '', 
                        attributes = {
                            'key' : null
                            }, )
                    ],
                previous_messages = [
                    authentik_openapi.models.log_event.LogEvent(
                        timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        log_level = 'critical', 
                        logger = '', 
                        event = '', 
                        attributes = {
                            'key' : null
                            }, )
                    ],
                aggregated_status = 'queued',
                description = '',
        )
        """

    def testTask(self):
        """Test Task"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
