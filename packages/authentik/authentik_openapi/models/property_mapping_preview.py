# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from authentik_openapi.models.base_model import Model
from authentik_openapi import util


class PropertyMappingPreview(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, preview: Dict[str, object]=None):
        """PropertyMappingPreview - a model defined in OpenAPI

        :param preview: The preview of this PropertyMappingPreview.
        """
        self.openapi_types = {
            'preview': Dict[str, object]
        }

        self.attribute_map = {
            'preview': 'preview'
        }

        self._preview = preview

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PropertyMappingPreview':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PropertyMappingPreview of this PropertyMappingPreview.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def preview(self):
        """Gets the preview of this PropertyMappingPreview.


        :return: The preview of this PropertyMappingPreview.
        :rtype: Dict[str, object]
        """
        return self._preview

    @preview.setter
    def preview(self, preview):
        """Sets the preview of this PropertyMappingPreview.


        :param preview: The preview of this PropertyMappingPreview.
        :type preview: Dict[str, object]
        """
        if preview is None:
            raise ValueError("Invalid value for `preview`, must not be `None`")

        self._preview = preview
