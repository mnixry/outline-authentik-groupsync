# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from authentik_openapi.models.base_model import Model
from authentik_openapi.models.user_self import UserSelf
from authentik_openapi import util


class SessionUser(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, user: UserSelf=None, original: UserSelf=None):
        """SessionUser - a model defined in OpenAPI

        :param user: The user of this SessionUser.
        :param original: The original of this SessionUser.
        """
        self.openapi_types = {
            'user': UserSelf,
            'original': UserSelf
        }

        self.attribute_map = {
            'user': 'user',
            'original': 'original'
        }

        self._user = user
        self._original = original

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SessionUser':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SessionUser of this SessionUser.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user(self):
        """Gets the user of this SessionUser.


        :return: The user of this SessionUser.
        :rtype: UserSelf
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this SessionUser.


        :param user: The user of this SessionUser.
        :type user: UserSelf
        """
        if user is None:
            raise ValueError("Invalid value for `user`, must not be `None`")

        self._user = user

    @property
    def original(self):
        """Gets the original of this SessionUser.


        :return: The original of this SessionUser.
        :rtype: UserSelf
        """
        return self._original

    @original.setter
    def original(self, original):
        """Sets the original of this SessionUser.


        :param original: The original of this SessionUser.
        :type original: UserSelf
        """

        self._original = original
