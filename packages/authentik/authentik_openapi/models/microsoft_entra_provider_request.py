# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from authentik_openapi.models.base_model import Model
from authentik_openapi.models.outgoing_sync_delete_action import OutgoingSyncDeleteAction
from authentik_openapi import util


class MicrosoftEntraProviderRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, property_mappings: List[str]=None, property_mappings_group: List[str]=None, client_id: str=None, client_secret: str=None, tenant_id: str=None, exclude_users_service_account: bool=None, filter_group: str=None, user_delete_action: OutgoingSyncDeleteAction=None, group_delete_action: OutgoingSyncDeleteAction=None):
        """MicrosoftEntraProviderRequest - a model defined in OpenAPI

        :param name: The name of this MicrosoftEntraProviderRequest.
        :param property_mappings: The property_mappings of this MicrosoftEntraProviderRequest.
        :param property_mappings_group: The property_mappings_group of this MicrosoftEntraProviderRequest.
        :param client_id: The client_id of this MicrosoftEntraProviderRequest.
        :param client_secret: The client_secret of this MicrosoftEntraProviderRequest.
        :param tenant_id: The tenant_id of this MicrosoftEntraProviderRequest.
        :param exclude_users_service_account: The exclude_users_service_account of this MicrosoftEntraProviderRequest.
        :param filter_group: The filter_group of this MicrosoftEntraProviderRequest.
        :param user_delete_action: The user_delete_action of this MicrosoftEntraProviderRequest.
        :param group_delete_action: The group_delete_action of this MicrosoftEntraProviderRequest.
        """
        self.openapi_types = {
            'name': str,
            'property_mappings': List[str],
            'property_mappings_group': List[str],
            'client_id': str,
            'client_secret': str,
            'tenant_id': str,
            'exclude_users_service_account': bool,
            'filter_group': str,
            'user_delete_action': OutgoingSyncDeleteAction,
            'group_delete_action': OutgoingSyncDeleteAction
        }

        self.attribute_map = {
            'name': 'name',
            'property_mappings': 'property_mappings',
            'property_mappings_group': 'property_mappings_group',
            'client_id': 'client_id',
            'client_secret': 'client_secret',
            'tenant_id': 'tenant_id',
            'exclude_users_service_account': 'exclude_users_service_account',
            'filter_group': 'filter_group',
            'user_delete_action': 'user_delete_action',
            'group_delete_action': 'group_delete_action'
        }

        self._name = name
        self._property_mappings = property_mappings
        self._property_mappings_group = property_mappings_group
        self._client_id = client_id
        self._client_secret = client_secret
        self._tenant_id = tenant_id
        self._exclude_users_service_account = exclude_users_service_account
        self._filter_group = filter_group
        self._user_delete_action = user_delete_action
        self._group_delete_action = group_delete_action

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MicrosoftEntraProviderRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MicrosoftEntraProviderRequest of this MicrosoftEntraProviderRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this MicrosoftEntraProviderRequest.


        :return: The name of this MicrosoftEntraProviderRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this MicrosoftEntraProviderRequest.


        :param name: The name of this MicrosoftEntraProviderRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")
        if name is not None and len(name) < 1:
            raise ValueError("Invalid value for `name`, length must be greater than or equal to `1`")

        self._name = name

    @property
    def property_mappings(self):
        """Gets the property_mappings of this MicrosoftEntraProviderRequest.


        :return: The property_mappings of this MicrosoftEntraProviderRequest.
        :rtype: List[str]
        """
        return self._property_mappings

    @property_mappings.setter
    def property_mappings(self, property_mappings):
        """Sets the property_mappings of this MicrosoftEntraProviderRequest.


        :param property_mappings: The property_mappings of this MicrosoftEntraProviderRequest.
        :type property_mappings: List[str]
        """

        self._property_mappings = property_mappings

    @property
    def property_mappings_group(self):
        """Gets the property_mappings_group of this MicrosoftEntraProviderRequest.

        Property mappings used for group creation/updating.

        :return: The property_mappings_group of this MicrosoftEntraProviderRequest.
        :rtype: List[str]
        """
        return self._property_mappings_group

    @property_mappings_group.setter
    def property_mappings_group(self, property_mappings_group):
        """Sets the property_mappings_group of this MicrosoftEntraProviderRequest.

        Property mappings used for group creation/updating.

        :param property_mappings_group: The property_mappings_group of this MicrosoftEntraProviderRequest.
        :type property_mappings_group: List[str]
        """

        self._property_mappings_group = property_mappings_group

    @property
    def client_id(self):
        """Gets the client_id of this MicrosoftEntraProviderRequest.


        :return: The client_id of this MicrosoftEntraProviderRequest.
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this MicrosoftEntraProviderRequest.


        :param client_id: The client_id of this MicrosoftEntraProviderRequest.
        :type client_id: str
        """
        if client_id is None:
            raise ValueError("Invalid value for `client_id`, must not be `None`")
        if client_id is not None and len(client_id) < 1:
            raise ValueError("Invalid value for `client_id`, length must be greater than or equal to `1`")

        self._client_id = client_id

    @property
    def client_secret(self):
        """Gets the client_secret of this MicrosoftEntraProviderRequest.


        :return: The client_secret of this MicrosoftEntraProviderRequest.
        :rtype: str
        """
        return self._client_secret

    @client_secret.setter
    def client_secret(self, client_secret):
        """Sets the client_secret of this MicrosoftEntraProviderRequest.


        :param client_secret: The client_secret of this MicrosoftEntraProviderRequest.
        :type client_secret: str
        """
        if client_secret is None:
            raise ValueError("Invalid value for `client_secret`, must not be `None`")
        if client_secret is not None and len(client_secret) < 1:
            raise ValueError("Invalid value for `client_secret`, length must be greater than or equal to `1`")

        self._client_secret = client_secret

    @property
    def tenant_id(self):
        """Gets the tenant_id of this MicrosoftEntraProviderRequest.


        :return: The tenant_id of this MicrosoftEntraProviderRequest.
        :rtype: str
        """
        return self._tenant_id

    @tenant_id.setter
    def tenant_id(self, tenant_id):
        """Sets the tenant_id of this MicrosoftEntraProviderRequest.


        :param tenant_id: The tenant_id of this MicrosoftEntraProviderRequest.
        :type tenant_id: str
        """
        if tenant_id is None:
            raise ValueError("Invalid value for `tenant_id`, must not be `None`")
        if tenant_id is not None and len(tenant_id) < 1:
            raise ValueError("Invalid value for `tenant_id`, length must be greater than or equal to `1`")

        self._tenant_id = tenant_id

    @property
    def exclude_users_service_account(self):
        """Gets the exclude_users_service_account of this MicrosoftEntraProviderRequest.


        :return: The exclude_users_service_account of this MicrosoftEntraProviderRequest.
        :rtype: bool
        """
        return self._exclude_users_service_account

    @exclude_users_service_account.setter
    def exclude_users_service_account(self, exclude_users_service_account):
        """Sets the exclude_users_service_account of this MicrosoftEntraProviderRequest.


        :param exclude_users_service_account: The exclude_users_service_account of this MicrosoftEntraProviderRequest.
        :type exclude_users_service_account: bool
        """

        self._exclude_users_service_account = exclude_users_service_account

    @property
    def filter_group(self):
        """Gets the filter_group of this MicrosoftEntraProviderRequest.


        :return: The filter_group of this MicrosoftEntraProviderRequest.
        :rtype: str
        """
        return self._filter_group

    @filter_group.setter
    def filter_group(self, filter_group):
        """Sets the filter_group of this MicrosoftEntraProviderRequest.


        :param filter_group: The filter_group of this MicrosoftEntraProviderRequest.
        :type filter_group: str
        """

        self._filter_group = filter_group

    @property
    def user_delete_action(self):
        """Gets the user_delete_action of this MicrosoftEntraProviderRequest.


        :return: The user_delete_action of this MicrosoftEntraProviderRequest.
        :rtype: OutgoingSyncDeleteAction
        """
        return self._user_delete_action

    @user_delete_action.setter
    def user_delete_action(self, user_delete_action):
        """Sets the user_delete_action of this MicrosoftEntraProviderRequest.


        :param user_delete_action: The user_delete_action of this MicrosoftEntraProviderRequest.
        :type user_delete_action: OutgoingSyncDeleteAction
        """

        self._user_delete_action = user_delete_action

    @property
    def group_delete_action(self):
        """Gets the group_delete_action of this MicrosoftEntraProviderRequest.


        :return: The group_delete_action of this MicrosoftEntraProviderRequest.
        :rtype: OutgoingSyncDeleteAction
        """
        return self._group_delete_action

    @group_delete_action.setter
    def group_delete_action(self, group_delete_action):
        """Sets the group_delete_action of this MicrosoftEntraProviderRequest.


        :param group_delete_action: The group_delete_action of this MicrosoftEntraProviderRequest.
        :type group_delete_action: OutgoingSyncDeleteAction
        """

        self._group_delete_action = group_delete_action
