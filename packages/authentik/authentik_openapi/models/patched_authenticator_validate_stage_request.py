# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from authentik_openapi.models.base_model import Model
from authentik_openapi.models.device_classes_enum import DeviceClassesEnum
from authentik_openapi.models.flow_set_request import FlowSetRequest
from authentik_openapi.models.not_configured_action_enum import NotConfiguredActionEnum
from authentik_openapi.models.user_verification_enum import UserVerificationEnum
from authentik_openapi import util


class PatchedAuthenticatorValidateStageRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, flow_set: List[FlowSetRequest]=None, not_configured_action: NotConfiguredActionEnum=None, device_classes: List[DeviceClassesEnum]=None, configuration_stages: List[str]=None, last_auth_threshold: str=None, webauthn_user_verification: UserVerificationEnum=None, webauthn_allowed_device_types: List[str]=None):
        """PatchedAuthenticatorValidateStageRequest - a model defined in OpenAPI

        :param name: The name of this PatchedAuthenticatorValidateStageRequest.
        :param flow_set: The flow_set of this PatchedAuthenticatorValidateStageRequest.
        :param not_configured_action: The not_configured_action of this PatchedAuthenticatorValidateStageRequest.
        :param device_classes: The device_classes of this PatchedAuthenticatorValidateStageRequest.
        :param configuration_stages: The configuration_stages of this PatchedAuthenticatorValidateStageRequest.
        :param last_auth_threshold: The last_auth_threshold of this PatchedAuthenticatorValidateStageRequest.
        :param webauthn_user_verification: The webauthn_user_verification of this PatchedAuthenticatorValidateStageRequest.
        :param webauthn_allowed_device_types: The webauthn_allowed_device_types of this PatchedAuthenticatorValidateStageRequest.
        """
        self.openapi_types = {
            'name': str,
            'flow_set': List[FlowSetRequest],
            'not_configured_action': NotConfiguredActionEnum,
            'device_classes': List[DeviceClassesEnum],
            'configuration_stages': List[str],
            'last_auth_threshold': str,
            'webauthn_user_verification': UserVerificationEnum,
            'webauthn_allowed_device_types': List[str]
        }

        self.attribute_map = {
            'name': 'name',
            'flow_set': 'flow_set',
            'not_configured_action': 'not_configured_action',
            'device_classes': 'device_classes',
            'configuration_stages': 'configuration_stages',
            'last_auth_threshold': 'last_auth_threshold',
            'webauthn_user_verification': 'webauthn_user_verification',
            'webauthn_allowed_device_types': 'webauthn_allowed_device_types'
        }

        self._name = name
        self._flow_set = flow_set
        self._not_configured_action = not_configured_action
        self._device_classes = device_classes
        self._configuration_stages = configuration_stages
        self._last_auth_threshold = last_auth_threshold
        self._webauthn_user_verification = webauthn_user_verification
        self._webauthn_allowed_device_types = webauthn_allowed_device_types

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PatchedAuthenticatorValidateStageRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PatchedAuthenticatorValidateStageRequest of this PatchedAuthenticatorValidateStageRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this PatchedAuthenticatorValidateStageRequest.


        :return: The name of this PatchedAuthenticatorValidateStageRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PatchedAuthenticatorValidateStageRequest.


        :param name: The name of this PatchedAuthenticatorValidateStageRequest.
        :type name: str
        """
        if name is not None and len(name) < 1:
            raise ValueError("Invalid value for `name`, length must be greater than or equal to `1`")

        self._name = name

    @property
    def flow_set(self):
        """Gets the flow_set of this PatchedAuthenticatorValidateStageRequest.


        :return: The flow_set of this PatchedAuthenticatorValidateStageRequest.
        :rtype: List[FlowSetRequest]
        """
        return self._flow_set

    @flow_set.setter
    def flow_set(self, flow_set):
        """Sets the flow_set of this PatchedAuthenticatorValidateStageRequest.


        :param flow_set: The flow_set of this PatchedAuthenticatorValidateStageRequest.
        :type flow_set: List[FlowSetRequest]
        """

        self._flow_set = flow_set

    @property
    def not_configured_action(self):
        """Gets the not_configured_action of this PatchedAuthenticatorValidateStageRequest.


        :return: The not_configured_action of this PatchedAuthenticatorValidateStageRequest.
        :rtype: NotConfiguredActionEnum
        """
        return self._not_configured_action

    @not_configured_action.setter
    def not_configured_action(self, not_configured_action):
        """Sets the not_configured_action of this PatchedAuthenticatorValidateStageRequest.


        :param not_configured_action: The not_configured_action of this PatchedAuthenticatorValidateStageRequest.
        :type not_configured_action: NotConfiguredActionEnum
        """

        self._not_configured_action = not_configured_action

    @property
    def device_classes(self):
        """Gets the device_classes of this PatchedAuthenticatorValidateStageRequest.

        Device classes which can be used to authenticate

        :return: The device_classes of this PatchedAuthenticatorValidateStageRequest.
        :rtype: List[DeviceClassesEnum]
        """
        return self._device_classes

    @device_classes.setter
    def device_classes(self, device_classes):
        """Sets the device_classes of this PatchedAuthenticatorValidateStageRequest.

        Device classes which can be used to authenticate

        :param device_classes: The device_classes of this PatchedAuthenticatorValidateStageRequest.
        :type device_classes: List[DeviceClassesEnum]
        """

        self._device_classes = device_classes

    @property
    def configuration_stages(self):
        """Gets the configuration_stages of this PatchedAuthenticatorValidateStageRequest.

        Stages used to configure Authenticator when user doesn't have any compatible devices. After this configuration Stage passes, the user is not prompted again.

        :return: The configuration_stages of this PatchedAuthenticatorValidateStageRequest.
        :rtype: List[str]
        """
        return self._configuration_stages

    @configuration_stages.setter
    def configuration_stages(self, configuration_stages):
        """Sets the configuration_stages of this PatchedAuthenticatorValidateStageRequest.

        Stages used to configure Authenticator when user doesn't have any compatible devices. After this configuration Stage passes, the user is not prompted again.

        :param configuration_stages: The configuration_stages of this PatchedAuthenticatorValidateStageRequest.
        :type configuration_stages: List[str]
        """

        self._configuration_stages = configuration_stages

    @property
    def last_auth_threshold(self):
        """Gets the last_auth_threshold of this PatchedAuthenticatorValidateStageRequest.

        If any of the user's device has been used within this threshold, this stage will be skipped

        :return: The last_auth_threshold of this PatchedAuthenticatorValidateStageRequest.
        :rtype: str
        """
        return self._last_auth_threshold

    @last_auth_threshold.setter
    def last_auth_threshold(self, last_auth_threshold):
        """Sets the last_auth_threshold of this PatchedAuthenticatorValidateStageRequest.

        If any of the user's device has been used within this threshold, this stage will be skipped

        :param last_auth_threshold: The last_auth_threshold of this PatchedAuthenticatorValidateStageRequest.
        :type last_auth_threshold: str
        """
        if last_auth_threshold is not None and len(last_auth_threshold) < 1:
            raise ValueError("Invalid value for `last_auth_threshold`, length must be greater than or equal to `1`")

        self._last_auth_threshold = last_auth_threshold

    @property
    def webauthn_user_verification(self):
        """Gets the webauthn_user_verification of this PatchedAuthenticatorValidateStageRequest.

        Enforce user verification for WebAuthn devices.

        :return: The webauthn_user_verification of this PatchedAuthenticatorValidateStageRequest.
        :rtype: UserVerificationEnum
        """
        return self._webauthn_user_verification

    @webauthn_user_verification.setter
    def webauthn_user_verification(self, webauthn_user_verification):
        """Sets the webauthn_user_verification of this PatchedAuthenticatorValidateStageRequest.

        Enforce user verification for WebAuthn devices.

        :param webauthn_user_verification: The webauthn_user_verification of this PatchedAuthenticatorValidateStageRequest.
        :type webauthn_user_verification: UserVerificationEnum
        """

        self._webauthn_user_verification = webauthn_user_verification

    @property
    def webauthn_allowed_device_types(self):
        """Gets the webauthn_allowed_device_types of this PatchedAuthenticatorValidateStageRequest.


        :return: The webauthn_allowed_device_types of this PatchedAuthenticatorValidateStageRequest.
        :rtype: List[str]
        """
        return self._webauthn_allowed_device_types

    @webauthn_allowed_device_types.setter
    def webauthn_allowed_device_types(self, webauthn_allowed_device_types):
        """Sets the webauthn_allowed_device_types of this PatchedAuthenticatorValidateStageRequest.


        :param webauthn_allowed_device_types: The webauthn_allowed_device_types of this PatchedAuthenticatorValidateStageRequest.
        :type webauthn_allowed_device_types: List[str]
        """

        self._webauthn_allowed_device_types = webauthn_allowed_device_types
