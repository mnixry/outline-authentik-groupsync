# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from authentik_openapi.models.base_model import Model
from authentik_openapi import util


class UserAccountRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pk: int=None):
        """UserAccountRequest - a model defined in OpenAPI

        :param pk: The pk of this UserAccountRequest.
        """
        self.openapi_types = {
            'pk': int
        }

        self.attribute_map = {
            'pk': 'pk'
        }

        self._pk = pk

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserAccountRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserAccountRequest of this UserAccountRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pk(self):
        """Gets the pk of this UserAccountRequest.


        :return: The pk of this UserAccountRequest.
        :rtype: int
        """
        return self._pk

    @pk.setter
    def pk(self, pk):
        """Sets the pk of this UserAccountRequest.


        :param pk: The pk of this UserAccountRequest.
        :type pk: int
        """
        if pk is None:
            raise ValueError("Invalid value for `pk`, must not be `None`")

        self._pk = pk
