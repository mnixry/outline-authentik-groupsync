# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from authentik_openapi.models.base_model import Model
from authentik_openapi.models.duo_response_enum import DuoResponseEnum
from authentik_openapi import util


class DuoDeviceEnrollmentStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, duo_response: DuoResponseEnum=None):
        """DuoDeviceEnrollmentStatus - a model defined in OpenAPI

        :param duo_response: The duo_response of this DuoDeviceEnrollmentStatus.
        """
        self.openapi_types = {
            'duo_response': DuoResponseEnum
        }

        self.attribute_map = {
            'duo_response': 'duo_response'
        }

        self._duo_response = duo_response

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DuoDeviceEnrollmentStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DuoDeviceEnrollmentStatus of this DuoDeviceEnrollmentStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def duo_response(self):
        """Gets the duo_response of this DuoDeviceEnrollmentStatus.


        :return: The duo_response of this DuoDeviceEnrollmentStatus.
        :rtype: DuoResponseEnum
        """
        return self._duo_response

    @duo_response.setter
    def duo_response(self, duo_response):
        """Sets the duo_response of this DuoDeviceEnrollmentStatus.


        :param duo_response: The duo_response of this DuoDeviceEnrollmentStatus.
        :type duo_response: DuoResponseEnum
        """
        if duo_response is None:
            raise ValueError("Invalid value for `duo_response`, must not be `None`")

        self._duo_response = duo_response
