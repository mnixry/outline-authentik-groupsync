# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from authentik_openapi.models.base_model import Model
from authentik_openapi import util


class SAMLMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metadata: str=None, download_url: str=None):
        """SAMLMetadata - a model defined in OpenAPI

        :param metadata: The metadata of this SAMLMetadata.
        :param download_url: The download_url of this SAMLMetadata.
        """
        self.openapi_types = {
            'metadata': str,
            'download_url': str
        }

        self.attribute_map = {
            'metadata': 'metadata',
            'download_url': 'download_url'
        }

        self._metadata = metadata
        self._download_url = download_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SAMLMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SAMLMetadata of this SAMLMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metadata(self):
        """Gets the metadata of this SAMLMetadata.


        :return: The metadata of this SAMLMetadata.
        :rtype: str
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this SAMLMetadata.


        :param metadata: The metadata of this SAMLMetadata.
        :type metadata: str
        """
        if metadata is None:
            raise ValueError("Invalid value for `metadata`, must not be `None`")

        self._metadata = metadata

    @property
    def download_url(self):
        """Gets the download_url of this SAMLMetadata.


        :return: The download_url of this SAMLMetadata.
        :rtype: str
        """
        return self._download_url

    @download_url.setter
    def download_url(self, download_url):
        """Sets the download_url of this SAMLMetadata.


        :param download_url: The download_url of this SAMLMetadata.
        :type download_url: str
        """
        if download_url is None:
            raise ValueError("Invalid value for `download_url`, must not be `None`")

        self._download_url = download_url
