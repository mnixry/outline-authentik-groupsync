# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from authentik_openapi.models.base_model import Model
from authentik_openapi import util


class EventActions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    LOGIN = 'login'
    LOGIN_FAILED = 'login_failed'
    LOGOUT = 'logout'
    USER_WRITE = 'user_write'
    SUSPICIOUS_REQUEST = 'suspicious_request'
    PASSWORD_SET = 'password_set'
    SECRET_VIEW = 'secret_view'
    SECRET_ROTATE = 'secret_rotate'
    INVITATION_USED = 'invitation_used'
    AUTHORIZE_APPLICATION = 'authorize_application'
    SOURCE_LINKED = 'source_linked'
    IMPERSONATION_STARTED = 'impersonation_started'
    IMPERSONATION_ENDED = 'impersonation_ended'
    FLOW_EXECUTION = 'flow_execution'
    POLICY_EXECUTION = 'policy_execution'
    POLICY_EXCEPTION = 'policy_exception'
    PROPERTY_MAPPING_EXCEPTION = 'property_mapping_exception'
    SYSTEM_TASK_EXECUTION = 'system_task_execution'
    SYSTEM_TASK_EXCEPTION = 'system_task_exception'
    SYSTEM_EXCEPTION = 'system_exception'
    CONFIGURATION_ERROR = 'configuration_error'
    MODEL_CREATED = 'model_created'
    MODEL_UPDATED = 'model_updated'
    MODEL_DELETED = 'model_deleted'
    EMAIL_SENT = 'email_sent'
    UPDATE_AVAILABLE = 'update_available'
    CUSTOM = 'custom_'

    def __init__(self):
        """EventActions - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventActions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EventActions of this EventActions.
        """
        return util.deserialize_model(dikt, cls)
