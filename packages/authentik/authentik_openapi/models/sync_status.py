# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from authentik_openapi.models.base_model import Model
from authentik_openapi.models.system_task import SystemTask
from authentik_openapi import util


class SyncStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_running: bool=None, tasks: List[SystemTask]=None):
        """SyncStatus - a model defined in OpenAPI

        :param is_running: The is_running of this SyncStatus.
        :param tasks: The tasks of this SyncStatus.
        """
        self.openapi_types = {
            'is_running': bool,
            'tasks': List[SystemTask]
        }

        self.attribute_map = {
            'is_running': 'is_running',
            'tasks': 'tasks'
        }

        self._is_running = is_running
        self._tasks = tasks

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SyncStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SyncStatus of this SyncStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_running(self):
        """Gets the is_running of this SyncStatus.


        :return: The is_running of this SyncStatus.
        :rtype: bool
        """
        return self._is_running

    @is_running.setter
    def is_running(self, is_running):
        """Sets the is_running of this SyncStatus.


        :param is_running: The is_running of this SyncStatus.
        :type is_running: bool
        """
        if is_running is None:
            raise ValueError("Invalid value for `is_running`, must not be `None`")

        self._is_running = is_running

    @property
    def tasks(self):
        """Gets the tasks of this SyncStatus.


        :return: The tasks of this SyncStatus.
        :rtype: List[SystemTask]
        """
        return self._tasks

    @tasks.setter
    def tasks(self, tasks):
        """Sets the tasks of this SyncStatus.


        :param tasks: The tasks of this SyncStatus.
        :type tasks: List[SystemTask]
        """
        if tasks is None:
            raise ValueError("Invalid value for `tasks`, must not be `None`")

        self._tasks = tasks
