# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from authentik_openapi.models.base_model import Model
from authentik_openapi import util


class InstallID(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, install_id: str=None):
        """InstallID - a model defined in OpenAPI

        :param install_id: The install_id of this InstallID.
        """
        self.openapi_types = {
            'install_id': str
        }

        self.attribute_map = {
            'install_id': 'install_id'
        }

        self._install_id = install_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstallID':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InstallID of this InstallID.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def install_id(self):
        """Gets the install_id of this InstallID.


        :return: The install_id of this InstallID.
        :rtype: str
        """
        return self._install_id

    @install_id.setter
    def install_id(self, install_id):
        """Sets the install_id of this InstallID.


        :param install_id: The install_id of this InstallID.
        :type install_id: str
        """
        if install_id is None:
            raise ValueError("Invalid value for `install_id`, must not be `None`")

        self._install_id = install_id
