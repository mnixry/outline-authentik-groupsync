# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from authentik_openapi.models.base_model import Model
from authentik_openapi import util


class UserPath(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, paths: List[str]=None):
        """UserPath - a model defined in OpenAPI

        :param paths: The paths of this UserPath.
        """
        self.openapi_types = {
            'paths': List[str]
        }

        self.attribute_map = {
            'paths': 'paths'
        }

        self._paths = paths

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserPath':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserPath of this UserPath.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def paths(self):
        """Gets the paths of this UserPath.


        :return: The paths of this UserPath.
        :rtype: List[str]
        """
        return self._paths

    @paths.setter
    def paths(self, paths):
        """Sets the paths of this UserPath.


        :param paths: The paths of this UserPath.
        :type paths: List[str]
        """
        if paths is None:
            raise ValueError("Invalid value for `paths`, must not be `None`")

        self._paths = paths
