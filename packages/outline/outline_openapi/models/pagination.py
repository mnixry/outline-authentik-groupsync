# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from outline_openapi.models.base_model import Model
from outline_openapi import util


class Pagination(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, offset: float=None, limit: float=None):
        """Pagination - a model defined in OpenAPI

        :param offset: The offset of this Pagination.
        :param limit: The limit of this Pagination.
        """
        self.openapi_types = {
            'offset': float,
            'limit': float
        }

        self.attribute_map = {
            'offset': 'offset',
            'limit': 'limit'
        }

        self._offset = offset
        self._limit = limit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Pagination':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Pagination of this Pagination.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def offset(self):
        """Gets the offset of this Pagination.


        :return: The offset of this Pagination.
        :rtype: float
        """
        return self._offset

    @offset.setter
    def offset(self, offset):
        """Sets the offset of this Pagination.


        :param offset: The offset of this Pagination.
        :type offset: float
        """

        self._offset = offset

    @property
    def limit(self):
        """Gets the limit of this Pagination.


        :return: The limit of this Pagination.
        :rtype: float
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this Pagination.


        :param limit: The limit of this Pagination.
        :type limit: float
        """

        self._limit = limit
