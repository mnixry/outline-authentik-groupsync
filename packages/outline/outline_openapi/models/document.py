# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from outline_openapi.models.base_model import Model
from outline_openapi.models.user import User
from outline_openapi import util


class Document(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, collection_id: str=None, parent_document_id: str=None, title: str=None, full_width: bool=None, emoji: str=None, text: str=None, url_id: str=None, collaborators: List[User]=None, pinned: bool=None, template: bool=None, template_id: str=None, revision: float=None, created_at: datetime=None, created_by: User=None, updated_at: datetime=None, updated_by: User=None, published_at: datetime=None, archived_at: datetime=None, deleted_at: datetime=None):
        """Document - a model defined in OpenAPI

        :param id: The id of this Document.
        :param collection_id: The collection_id of this Document.
        :param parent_document_id: The parent_document_id of this Document.
        :param title: The title of this Document.
        :param full_width: The full_width of this Document.
        :param emoji: The emoji of this Document.
        :param text: The text of this Document.
        :param url_id: The url_id of this Document.
        :param collaborators: The collaborators of this Document.
        :param pinned: The pinned of this Document.
        :param template: The template of this Document.
        :param template_id: The template_id of this Document.
        :param revision: The revision of this Document.
        :param created_at: The created_at of this Document.
        :param created_by: The created_by of this Document.
        :param updated_at: The updated_at of this Document.
        :param updated_by: The updated_by of this Document.
        :param published_at: The published_at of this Document.
        :param archived_at: The archived_at of this Document.
        :param deleted_at: The deleted_at of this Document.
        """
        self.openapi_types = {
            'id': str,
            'collection_id': str,
            'parent_document_id': str,
            'title': str,
            'full_width': bool,
            'emoji': str,
            'text': str,
            'url_id': str,
            'collaborators': List[User],
            'pinned': bool,
            'template': bool,
            'template_id': str,
            'revision': float,
            'created_at': datetime,
            'created_by': User,
            'updated_at': datetime,
            'updated_by': User,
            'published_at': datetime,
            'archived_at': datetime,
            'deleted_at': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'collection_id': 'collectionId',
            'parent_document_id': 'parentDocumentId',
            'title': 'title',
            'full_width': 'fullWidth',
            'emoji': 'emoji',
            'text': 'text',
            'url_id': 'urlId',
            'collaborators': 'collaborators',
            'pinned': 'pinned',
            'template': 'template',
            'template_id': 'templateId',
            'revision': 'revision',
            'created_at': 'createdAt',
            'created_by': 'createdBy',
            'updated_at': 'updatedAt',
            'updated_by': 'updatedBy',
            'published_at': 'publishedAt',
            'archived_at': 'archivedAt',
            'deleted_at': 'deletedAt'
        }

        self._id = id
        self._collection_id = collection_id
        self._parent_document_id = parent_document_id
        self._title = title
        self._full_width = full_width
        self._emoji = emoji
        self._text = text
        self._url_id = url_id
        self._collaborators = collaborators
        self._pinned = pinned
        self._template = template
        self._template_id = template_id
        self._revision = revision
        self._created_at = created_at
        self._created_by = created_by
        self._updated_at = updated_at
        self._updated_by = updated_by
        self._published_at = published_at
        self._archived_at = archived_at
        self._deleted_at = deleted_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Document':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Document of this Document.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Document.

        Unique identifier for the object.

        :return: The id of this Document.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Document.

        Unique identifier for the object.

        :param id: The id of this Document.
        :type id: str
        """

        self._id = id

    @property
    def collection_id(self):
        """Gets the collection_id of this Document.

        Identifier for the associated collection.

        :return: The collection_id of this Document.
        :rtype: str
        """
        return self._collection_id

    @collection_id.setter
    def collection_id(self, collection_id):
        """Sets the collection_id of this Document.

        Identifier for the associated collection.

        :param collection_id: The collection_id of this Document.
        :type collection_id: str
        """

        self._collection_id = collection_id

    @property
    def parent_document_id(self):
        """Gets the parent_document_id of this Document.

        Identifier for the document this is a child of, if any.

        :return: The parent_document_id of this Document.
        :rtype: str
        """
        return self._parent_document_id

    @parent_document_id.setter
    def parent_document_id(self, parent_document_id):
        """Sets the parent_document_id of this Document.

        Identifier for the document this is a child of, if any.

        :param parent_document_id: The parent_document_id of this Document.
        :type parent_document_id: str
        """

        self._parent_document_id = parent_document_id

    @property
    def title(self):
        """Gets the title of this Document.

        The title of the document.

        :return: The title of this Document.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Document.

        The title of the document.

        :param title: The title of this Document.
        :type title: str
        """

        self._title = title

    @property
    def full_width(self):
        """Gets the full_width of this Document.

        Whether this document should be displayed in a full-width view.

        :return: The full_width of this Document.
        :rtype: bool
        """
        return self._full_width

    @full_width.setter
    def full_width(self, full_width):
        """Sets the full_width of this Document.

        Whether this document should be displayed in a full-width view.

        :param full_width: The full_width of this Document.
        :type full_width: bool
        """

        self._full_width = full_width

    @property
    def emoji(self):
        """Gets the emoji of this Document.

        An emoji associated with the document.

        :return: The emoji of this Document.
        :rtype: str
        """
        return self._emoji

    @emoji.setter
    def emoji(self, emoji):
        """Sets the emoji of this Document.

        An emoji associated with the document.

        :param emoji: The emoji of this Document.
        :type emoji: str
        """

        self._emoji = emoji

    @property
    def text(self):
        """Gets the text of this Document.

        The text content of the document, contains markdown formatting

        :return: The text of this Document.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this Document.

        The text content of the document, contains markdown formatting

        :param text: The text of this Document.
        :type text: str
        """

        self._text = text

    @property
    def url_id(self):
        """Gets the url_id of this Document.

        A short unique ID that can be used to identify the document as an alternative to the UUID

        :return: The url_id of this Document.
        :rtype: str
        """
        return self._url_id

    @url_id.setter
    def url_id(self, url_id):
        """Sets the url_id of this Document.

        A short unique ID that can be used to identify the document as an alternative to the UUID

        :param url_id: The url_id of this Document.
        :type url_id: str
        """

        self._url_id = url_id

    @property
    def collaborators(self):
        """Gets the collaborators of this Document.


        :return: The collaborators of this Document.
        :rtype: List[User]
        """
        return self._collaborators

    @collaborators.setter
    def collaborators(self, collaborators):
        """Sets the collaborators of this Document.


        :param collaborators: The collaborators of this Document.
        :type collaborators: List[User]
        """

        self._collaborators = collaborators

    @property
    def pinned(self):
        """Gets the pinned of this Document.

        Whether this document is pinned in the collection

        :return: The pinned of this Document.
        :rtype: bool
        """
        return self._pinned

    @pinned.setter
    def pinned(self, pinned):
        """Sets the pinned of this Document.

        Whether this document is pinned in the collection

        :param pinned: The pinned of this Document.
        :type pinned: bool
        """

        self._pinned = pinned

    @property
    def template(self):
        """Gets the template of this Document.

        Whether this document is a template

        :return: The template of this Document.
        :rtype: bool
        """
        return self._template

    @template.setter
    def template(self, template):
        """Sets the template of this Document.

        Whether this document is a template

        :param template: The template of this Document.
        :type template: bool
        """

        self._template = template

    @property
    def template_id(self):
        """Gets the template_id of this Document.

        Unique identifier for the template this document was created from, if any

        :return: The template_id of this Document.
        :rtype: str
        """
        return self._template_id

    @template_id.setter
    def template_id(self, template_id):
        """Sets the template_id of this Document.

        Unique identifier for the template this document was created from, if any

        :param template_id: The template_id of this Document.
        :type template_id: str
        """

        self._template_id = template_id

    @property
    def revision(self):
        """Gets the revision of this Document.

        A number that is auto incrementing with every revision of the document that is saved

        :return: The revision of this Document.
        :rtype: float
        """
        return self._revision

    @revision.setter
    def revision(self, revision):
        """Sets the revision of this Document.

        A number that is auto incrementing with every revision of the document that is saved

        :param revision: The revision of this Document.
        :type revision: float
        """

        self._revision = revision

    @property
    def created_at(self):
        """Gets the created_at of this Document.

        The date and time that this object was created

        :return: The created_at of this Document.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Document.

        The date and time that this object was created

        :param created_at: The created_at of this Document.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def created_by(self):
        """Gets the created_by of this Document.


        :return: The created_by of this Document.
        :rtype: User
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this Document.


        :param created_by: The created_by of this Document.
        :type created_by: User
        """

        self._created_by = created_by

    @property
    def updated_at(self):
        """Gets the updated_at of this Document.

        The date and time that this object was last changed

        :return: The updated_at of this Document.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this Document.

        The date and time that this object was last changed

        :param updated_at: The updated_at of this Document.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def updated_by(self):
        """Gets the updated_by of this Document.


        :return: The updated_by of this Document.
        :rtype: User
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this Document.


        :param updated_by: The updated_by of this Document.
        :type updated_by: User
        """

        self._updated_by = updated_by

    @property
    def published_at(self):
        """Gets the published_at of this Document.

        The date and time that this object was published

        :return: The published_at of this Document.
        :rtype: datetime
        """
        return self._published_at

    @published_at.setter
    def published_at(self, published_at):
        """Sets the published_at of this Document.

        The date and time that this object was published

        :param published_at: The published_at of this Document.
        :type published_at: datetime
        """

        self._published_at = published_at

    @property
    def archived_at(self):
        """Gets the archived_at of this Document.

        The date and time that this object was archived

        :return: The archived_at of this Document.
        :rtype: datetime
        """
        return self._archived_at

    @archived_at.setter
    def archived_at(self, archived_at):
        """Sets the archived_at of this Document.

        The date and time that this object was archived

        :param archived_at: The archived_at of this Document.
        :type archived_at: datetime
        """

        self._archived_at = archived_at

    @property
    def deleted_at(self):
        """Gets the deleted_at of this Document.

        The date and time that this object was deleted

        :return: The deleted_at of this Document.
        :rtype: datetime
        """
        return self._deleted_at

    @deleted_at.setter
    def deleted_at(self, deleted_at):
        """Sets the deleted_at of this Document.

        The date and time that this object was deleted

        :param deleted_at: The deleted_at of this Document.
        :type deleted_at: datetime
        """

        self._deleted_at = deleted_at
