# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from outline_openapi.models.base_model import Model
from outline_openapi.models.invite import Invite
from outline_openapi.models.user import User
from outline_openapi import util


class UsersInvitePost200ResponseData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sent: List[Invite]=None, users: List[User]=None):
        """UsersInvitePost200ResponseData - a model defined in OpenAPI

        :param sent: The sent of this UsersInvitePost200ResponseData.
        :param users: The users of this UsersInvitePost200ResponseData.
        """
        self.openapi_types = {
            'sent': List[Invite],
            'users': List[User]
        }

        self.attribute_map = {
            'sent': 'sent',
            'users': 'users'
        }

        self._sent = sent
        self._users = users

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UsersInvitePost200ResponseData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _users_invite_post_200_response_data of this UsersInvitePost200ResponseData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sent(self):
        """Gets the sent of this UsersInvitePost200ResponseData.


        :return: The sent of this UsersInvitePost200ResponseData.
        :rtype: List[Invite]
        """
        return self._sent

    @sent.setter
    def sent(self, sent):
        """Sets the sent of this UsersInvitePost200ResponseData.


        :param sent: The sent of this UsersInvitePost200ResponseData.
        :type sent: List[Invite]
        """

        self._sent = sent

    @property
    def users(self):
        """Gets the users of this UsersInvitePost200ResponseData.


        :return: The users of this UsersInvitePost200ResponseData.
        :rtype: List[User]
        """
        return self._users

    @users.setter
    def users(self, users):
        """Sets the users of this UsersInvitePost200ResponseData.


        :param users: The users of this UsersInvitePost200ResponseData.
        :type users: List[User]
        """

        self._users = users
