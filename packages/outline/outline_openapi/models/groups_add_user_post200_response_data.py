# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from outline_openapi.models.base_model import Model
from outline_openapi.models.group import Group
from outline_openapi.models.membership import Membership
from outline_openapi.models.user import User
from outline_openapi import util


class GroupsAddUserPost200ResponseData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, users: List[User]=None, groups: List[Group]=None, group_memberships: List[Membership]=None):
        """GroupsAddUserPost200ResponseData - a model defined in OpenAPI

        :param users: The users of this GroupsAddUserPost200ResponseData.
        :param groups: The groups of this GroupsAddUserPost200ResponseData.
        :param group_memberships: The group_memberships of this GroupsAddUserPost200ResponseData.
        """
        self.openapi_types = {
            'users': List[User],
            'groups': List[Group],
            'group_memberships': List[Membership]
        }

        self.attribute_map = {
            'users': 'users',
            'groups': 'groups',
            'group_memberships': 'groupMemberships'
        }

        self._users = users
        self._groups = groups
        self._group_memberships = group_memberships

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GroupsAddUserPost200ResponseData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _groups_add_user_post_200_response_data of this GroupsAddUserPost200ResponseData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def users(self):
        """Gets the users of this GroupsAddUserPost200ResponseData.


        :return: The users of this GroupsAddUserPost200ResponseData.
        :rtype: List[User]
        """
        return self._users

    @users.setter
    def users(self, users):
        """Sets the users of this GroupsAddUserPost200ResponseData.


        :param users: The users of this GroupsAddUserPost200ResponseData.
        :type users: List[User]
        """

        self._users = users

    @property
    def groups(self):
        """Gets the groups of this GroupsAddUserPost200ResponseData.


        :return: The groups of this GroupsAddUserPost200ResponseData.
        :rtype: List[Group]
        """
        return self._groups

    @groups.setter
    def groups(self, groups):
        """Sets the groups of this GroupsAddUserPost200ResponseData.


        :param groups: The groups of this GroupsAddUserPost200ResponseData.
        :type groups: List[Group]
        """

        self._groups = groups

    @property
    def group_memberships(self):
        """Gets the group_memberships of this GroupsAddUserPost200ResponseData.


        :return: The group_memberships of this GroupsAddUserPost200ResponseData.
        :rtype: List[Membership]
        """
        return self._group_memberships

    @group_memberships.setter
    def group_memberships(self, group_memberships):
        """Sets the group_memberships of this GroupsAddUserPost200ResponseData.


        :param group_memberships: The group_memberships of this GroupsAddUserPost200ResponseData.
        :type group_memberships: List[Membership]
        """

        self._group_memberships = group_memberships
