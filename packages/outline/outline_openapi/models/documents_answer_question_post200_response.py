# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from outline_openapi.models.base_model import Model
from outline_openapi.models.document import Document
from outline_openapi.models.policy import Policy
from outline_openapi.models.search_result import SearchResult
from outline_openapi import util


class DocumentsAnswerQuestionPost200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, documents: List[Document]=None, policies: List[Policy]=None, search: SearchResult=None):
        """DocumentsAnswerQuestionPost200Response - a model defined in OpenAPI

        :param documents: The documents of this DocumentsAnswerQuestionPost200Response.
        :param policies: The policies of this DocumentsAnswerQuestionPost200Response.
        :param search: The search of this DocumentsAnswerQuestionPost200Response.
        """
        self.openapi_types = {
            'documents': List[Document],
            'policies': List[Policy],
            'search': SearchResult
        }

        self.attribute_map = {
            'documents': 'documents',
            'policies': 'policies',
            'search': 'search'
        }

        self._documents = documents
        self._policies = policies
        self._search = search

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DocumentsAnswerQuestionPost200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _documents_answerQuestion_post_200_response of this DocumentsAnswerQuestionPost200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def documents(self):
        """Gets the documents of this DocumentsAnswerQuestionPost200Response.


        :return: The documents of this DocumentsAnswerQuestionPost200Response.
        :rtype: List[Document]
        """
        return self._documents

    @documents.setter
    def documents(self, documents):
        """Sets the documents of this DocumentsAnswerQuestionPost200Response.


        :param documents: The documents of this DocumentsAnswerQuestionPost200Response.
        :type documents: List[Document]
        """

        self._documents = documents

    @property
    def policies(self):
        """Gets the policies of this DocumentsAnswerQuestionPost200Response.


        :return: The policies of this DocumentsAnswerQuestionPost200Response.
        :rtype: List[Policy]
        """
        return self._policies

    @policies.setter
    def policies(self, policies):
        """Sets the policies of this DocumentsAnswerQuestionPost200Response.


        :param policies: The policies of this DocumentsAnswerQuestionPost200Response.
        :type policies: List[Policy]
        """

        self._policies = policies

    @property
    def search(self):
        """Gets the search of this DocumentsAnswerQuestionPost200Response.


        :return: The search of this DocumentsAnswerQuestionPost200Response.
        :rtype: SearchResult
        """
        return self._search

    @search.setter
    def search(self, search):
        """Sets the search of this DocumentsAnswerQuestionPost200Response.


        :param search: The search of this DocumentsAnswerQuestionPost200Response.
        :type search: SearchResult
        """

        self._search = search
