# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from outline_openapi.models.base_model import Model
from outline_openapi.models.user import User
from outline_openapi import util


class Share(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, document_title: str=None, document_url: str=None, url: str=None, published: bool=None, include_child_documents: bool=None, created_at: datetime=None, created_by: User=None, updated_at: datetime=None, last_accessed_at: datetime=None):
        """Share - a model defined in OpenAPI

        :param id: The id of this Share.
        :param document_title: The document_title of this Share.
        :param document_url: The document_url of this Share.
        :param url: The url of this Share.
        :param published: The published of this Share.
        :param include_child_documents: The include_child_documents of this Share.
        :param created_at: The created_at of this Share.
        :param created_by: The created_by of this Share.
        :param updated_at: The updated_at of this Share.
        :param last_accessed_at: The last_accessed_at of this Share.
        """
        self.openapi_types = {
            'id': str,
            'document_title': str,
            'document_url': str,
            'url': str,
            'published': bool,
            'include_child_documents': bool,
            'created_at': datetime,
            'created_by': User,
            'updated_at': datetime,
            'last_accessed_at': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'document_title': 'documentTitle',
            'document_url': 'documentUrl',
            'url': 'url',
            'published': 'published',
            'include_child_documents': 'includeChildDocuments',
            'created_at': 'createdAt',
            'created_by': 'createdBy',
            'updated_at': 'updatedAt',
            'last_accessed_at': 'lastAccessedAt'
        }

        self._id = id
        self._document_title = document_title
        self._document_url = document_url
        self._url = url
        self._published = published
        self._include_child_documents = include_child_documents
        self._created_at = created_at
        self._created_by = created_by
        self._updated_at = updated_at
        self._last_accessed_at = last_accessed_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Share':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Share of this Share.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Share.

        Unique identifier for the object.

        :return: The id of this Share.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Share.

        Unique identifier for the object.

        :param id: The id of this Share.
        :type id: str
        """

        self._id = id

    @property
    def document_title(self):
        """Gets the document_title of this Share.

        Title of the shared document.

        :return: The document_title of this Share.
        :rtype: str
        """
        return self._document_title

    @document_title.setter
    def document_title(self, document_title):
        """Sets the document_title of this Share.

        Title of the shared document.

        :param document_title: The document_title of this Share.
        :type document_title: str
        """

        self._document_title = document_title

    @property
    def document_url(self):
        """Gets the document_url of this Share.

        URL of the original document.

        :return: The document_url of this Share.
        :rtype: str
        """
        return self._document_url

    @document_url.setter
    def document_url(self, document_url):
        """Sets the document_url of this Share.

        URL of the original document.

        :param document_url: The document_url of this Share.
        :type document_url: str
        """

        self._document_url = document_url

    @property
    def url(self):
        """Gets the url of this Share.

        URL of the publicly shared document.

        :return: The url of this Share.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this Share.

        URL of the publicly shared document.

        :param url: The url of this Share.
        :type url: str
        """

        self._url = url

    @property
    def published(self):
        """Gets the published of this Share.

        If true the share can be loaded without a user account.

        :return: The published of this Share.
        :rtype: bool
        """
        return self._published

    @published.setter
    def published(self, published):
        """Sets the published of this Share.

        If true the share can be loaded without a user account.

        :param published: The published of this Share.
        :type published: bool
        """

        self._published = published

    @property
    def include_child_documents(self):
        """Gets the include_child_documents of this Share.

        If to also give permission to view documents nested beneath this one.

        :return: The include_child_documents of this Share.
        :rtype: bool
        """
        return self._include_child_documents

    @include_child_documents.setter
    def include_child_documents(self, include_child_documents):
        """Sets the include_child_documents of this Share.

        If to also give permission to view documents nested beneath this one.

        :param include_child_documents: The include_child_documents of this Share.
        :type include_child_documents: bool
        """

        self._include_child_documents = include_child_documents

    @property
    def created_at(self):
        """Gets the created_at of this Share.

        Date and time when this share was created

        :return: The created_at of this Share.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Share.

        Date and time when this share was created

        :param created_at: The created_at of this Share.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def created_by(self):
        """Gets the created_by of this Share.


        :return: The created_by of this Share.
        :rtype: User
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this Share.


        :param created_by: The created_by of this Share.
        :type created_by: User
        """

        self._created_by = created_by

    @property
    def updated_at(self):
        """Gets the updated_at of this Share.

        Date and time when this share was edited

        :return: The updated_at of this Share.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this Share.

        Date and time when this share was edited

        :param updated_at: The updated_at of this Share.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def last_accessed_at(self):
        """Gets the last_accessed_at of this Share.

        Date and time when this share was last viewed

        :return: The last_accessed_at of this Share.
        :rtype: datetime
        """
        return self._last_accessed_at

    @last_accessed_at.setter
    def last_accessed_at(self, last_accessed_at):
        """Sets the last_accessed_at of this Share.

        Date and time when this share was last viewed

        :param last_accessed_at: The last_accessed_at of this Share.
        :type last_accessed_at: datetime
        """

        self._last_accessed_at = last_accessed_at
