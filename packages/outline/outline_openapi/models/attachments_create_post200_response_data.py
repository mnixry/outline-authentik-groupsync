# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from outline_openapi.models.base_model import Model
from outline_openapi.models.attachment import Attachment
from outline_openapi import util


class AttachmentsCreatePost200ResponseData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_upload_size: float=None, upload_url: str=None, form: object=None, attachment: Attachment=None):
        """AttachmentsCreatePost200ResponseData - a model defined in OpenAPI

        :param max_upload_size: The max_upload_size of this AttachmentsCreatePost200ResponseData.
        :param upload_url: The upload_url of this AttachmentsCreatePost200ResponseData.
        :param form: The form of this AttachmentsCreatePost200ResponseData.
        :param attachment: The attachment of this AttachmentsCreatePost200ResponseData.
        """
        self.openapi_types = {
            'max_upload_size': float,
            'upload_url': str,
            'form': object,
            'attachment': Attachment
        }

        self.attribute_map = {
            'max_upload_size': 'maxUploadSize',
            'upload_url': 'uploadUrl',
            'form': 'form',
            'attachment': 'attachment'
        }

        self._max_upload_size = max_upload_size
        self._upload_url = upload_url
        self._form = form
        self._attachment = attachment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AttachmentsCreatePost200ResponseData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _attachments_create_post_200_response_data of this AttachmentsCreatePost200ResponseData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_upload_size(self):
        """Gets the max_upload_size of this AttachmentsCreatePost200ResponseData.


        :return: The max_upload_size of this AttachmentsCreatePost200ResponseData.
        :rtype: float
        """
        return self._max_upload_size

    @max_upload_size.setter
    def max_upload_size(self, max_upload_size):
        """Sets the max_upload_size of this AttachmentsCreatePost200ResponseData.


        :param max_upload_size: The max_upload_size of this AttachmentsCreatePost200ResponseData.
        :type max_upload_size: float
        """

        self._max_upload_size = max_upload_size

    @property
    def upload_url(self):
        """Gets the upload_url of this AttachmentsCreatePost200ResponseData.


        :return: The upload_url of this AttachmentsCreatePost200ResponseData.
        :rtype: str
        """
        return self._upload_url

    @upload_url.setter
    def upload_url(self, upload_url):
        """Sets the upload_url of this AttachmentsCreatePost200ResponseData.


        :param upload_url: The upload_url of this AttachmentsCreatePost200ResponseData.
        :type upload_url: str
        """

        self._upload_url = upload_url

    @property
    def form(self):
        """Gets the form of this AttachmentsCreatePost200ResponseData.


        :return: The form of this AttachmentsCreatePost200ResponseData.
        :rtype: object
        """
        return self._form

    @form.setter
    def form(self, form):
        """Sets the form of this AttachmentsCreatePost200ResponseData.


        :param form: The form of this AttachmentsCreatePost200ResponseData.
        :type form: object
        """

        self._form = form

    @property
    def attachment(self):
        """Gets the attachment of this AttachmentsCreatePost200ResponseData.


        :return: The attachment of this AttachmentsCreatePost200ResponseData.
        :rtype: Attachment
        """
        return self._attachment

    @attachment.setter
    def attachment(self, attachment):
        """Sets the attachment of this AttachmentsCreatePost200ResponseData.


        :param attachment: The attachment of this AttachmentsCreatePost200ResponseData.
        :type attachment: Attachment
        """

        self._attachment = attachment
